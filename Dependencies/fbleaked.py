import hashlib
import requests

from colorama import init, Fore, Style

init() # Init colorama

def format_number(phone_number):
 
    country_codes = [
        "+356", "+31", "+93", "+355", "+213", "+1684", "+376", "+244", "+1264", "+1268",
        "+54", "+374", "+297", "+61", "+43", "+994", "+1242", "+973", "+880", "+1246",
        "+375", "+32", "+501", "+229", "+1441", "+975", "+591", "+387", "+267", "+55",
        "+246", "+1284", "+673", "+359", "+226", "+257", "+855", "+237", "+1", "+238",
        "+599", "+1345", "+236", "+235", "+56", "+86", "+57", "+269", "+243", "+242",
        "+682", "+506", "+225", "+385", "+53", "+599", "+357", "+420", "+45", "+253",
        "+1767", "+1", "+593", "+20", "+503", "+240", "+291", "+372", "+251", "+500",
        "+298", "+679", "+358", "+33", "+594", "+689", "+241", "+220", "+995", "+49",
        "+233", "+350", "+30", "+299", "+1473", "+590", "+1671", "+502", "+44", "+224",
        "+245", "+592", "+509", "+504", "+852", "+36", "+354", "+91", "+62", "+98",
        "+964", "+353", "+44", "+972", "+39", "+1876", "+81", "+44", "+962", "+7",
        "+254", "+686", "+383", "+965", "+996", "+856", "+371", "+961", "+266", "+231",
        "+218", "+423", "+370", "+352", "+853", "+389", "+261", "+265", "+60", "+960",
        "+223", "+692", "+596", "+222", "+230", "+262", "+52", "+691", "+373", "+377",
        "+976", "+382", "+1664", "+212", "+258", "+95", "+264", "+674", "+977", "+687",
        "+64", "+505", "+227", "+234", "+683", "+672", "+850", "+1670", "+47", "+968",
        "+92", "+680", "+970", "+507", "+675", "+595", "+51", "+63", "+48", "+351",
        "+1", "+974", "+262", "+40", "+7", "+250", "+590", "+290", "+1869", "+1758",
        "+590", "+508", "+1784", "+685", "+378", "+239", "+966", "+221", "+381", "+248",
        "+232", "+65", "+1721", "+421", "+386", "+677", "+252", "+27", "+82", "+211",
        "+34", "+94", "+249", "+597", "+268", "+41", "+963", "+886", "+255", "+670",
        "+66", "+236", "+960", "+676", "+962", "+216", "+993", "+255", "+290", "+268",
        "+44", "+1205", "+224", "+228", "+20", "+507", "+597", "+1859", "+237", "+66",
        "+389", "+62", "+38", "+1", "+84", "+966", "+978", "+965", "+252", "+939", 
        "+250", "+36", "+373", "+675", "+680", "+258", "+228", "+250", "+54", "+685",
        "+264", "+225", "+507", "+218", "+237", "+258", "+968", "+227", "+239", "+245",
        "+256", "+237", "+500", "+677", "+268", "+257", "+223", "+255", "+966", "+25",
        "+963", "+995", "+1868", "+68", "+59", "+966", "+504", "+225", "+238", "+973",
        "+96", "+12", "+220", "+505", "+55", "+974", "+7", "+41", "+965", "+1", "+591",
        "+1", "+32", "+222", "+245", "+238", "+225", "+39", "+290", "+220", "+216",
        "+225", "+224", "+225", "+56", "+25", "+255", "+996", "+69", "+687", "+598",
        "+263", "+239", "+243", "+993", "+257", "+225", "+672", "+248", "+973", "+62"
    ]

    if phone_number.startswith('+'):
        phone_number = phone_number[1:]

    for code in country_codes:
        code = code[1:]  
        if phone_number.startswith(code):
            if phone_number[len(code)] == '0':
                phone_number = code + phone_number[len(code)+1:]
            else:
                phone_number = code + phone_number[len(code):]
            break
    
    return phone_number

    
def sha1_hash(data):
    sha1 = hashlib.sha1()
    sha1.update(data.encode('utf-8'))
    return sha1.hexdigest()

def check_leak_status(hashed_number, country_code):
    url = f'https://api.haveibeenzuckered.com/api/v1/scope/{country_code}'
    response = requests.get(url)
    
    if response.status_code == 200:
        if hashed_number in response.text:
            return 'Leaked'
        else:
            return 'Not Leaked'
    else:
        return 'API request failed'

def leaked(phone):
    formatted_number = format_number(phone)
    
    hashed_number = sha1_hash(formatted_number)
    
    country_code = hashed_number[:5]
    status = check_leak_status(hashed_number, country_code)
    print(f'{Fore.YELLOW}[!] Phone number : {phone}')
    print(f'{Fore.GREEN }[+] {Fore.YELLOW}Status : {status}')

