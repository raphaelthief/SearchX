{
  "sites": [
    {
      "app": "Facebook",
      "id": 1,
      "method": "GET",
      "url": "https://www.facebook.com/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "YouTube",
      "id": 2,
      "method": "GET",
      "url": "https://www.youtube.com/user/{username}",
      "valid": "response.status == 200 and 'name\" content=' in responseContent"
    },
    {
      "app": "Twitter",
      "id": 3,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('a', class_='profile-card-fullname')['title']"
        },
        {
          "key": "Bio",
          "type": "generic-data",
          "value": "soup.find('div',class_='profile-bio').string"
        },
        {
          "key": "Site",
          "type": "generic-data",
          "value": "soup.find('div',class_='profile-website').text.strip('\\t\\r\\n')"
        },
        {
          "key": "Member since",
          "type": "generic-data",
          "value": "soup.find('div',class_='profile-joindate').find('span')['title']"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "'https://nitter.net'+soup.find('a', class_='profile-card-avatar')['href']"
        },
        {
          "key": "location",
          "type": "location",
          "value": "soup.select_one('.profile-location:nth-of-type(2)').text.strip('\\t\\r\\n')"
        }
      ],
      "method": "GET",
      "url": "https://nitter.net/{username}",
      "valid": "response.status == 200 and ') | nitter</title>' in responseContent"
    },
    {
      "app": "Telegram",
      "id": 4,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('span', dir='auto').string"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('img', class_='tgme_page_photo_image')['src']"
        }
      ],
      "method": "GET",
      "url": "https://t.me/{username}",
      "valid": "'You can contact' in soup.find('meta', property='og:description')['content'] and 'tgme_page_title' in responseContent"
    },
    {
      "app": "TikTok",
      "id": 5,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('h1').text"
        },
        {
          "key": "Bio",
          "type": "generic-data",
          "value": "soup.find('h2', attrs={'data-e2e':'user-bio'}).text"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('img')['src']"
        }
      ],
      "method": "GET",
      "url": "https://www.tiktok.com/@{username}",
      "valid": "response.status == 200 and 'title=\"Following\"' in responseContent"
    },
    {
      "app": "Tinder",
      "id": 6,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('meta', property='profile:first_name')['content']"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('meta', property='og:image')['content']"
        }
      ],
      "method": "GET",
      "url": "https://tinder.com/@{username}",
      "valid": "'@' in soup.find('meta', property='og:title')['content'] and ') | Tinder</title><meta' in responseContent"
    },
    {
      "app": "Instagram",
      "id": 7,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('h2', class_='profile-name-bottom').string"
        },
        {
          "key": "Bio",
          "type": "generic-data",
          "value": "soup.find('div', class_='profile-description').text.strip('\\t\\r\\n')"
        },
        {
          "key": "Followers",
          "type": "generic-data",
          "value": "soup.find('span', class_='followed_by').string"
        },
        {
          "key": "Following",
          "type": "generic-data",
          "value": "soup.find('span', class_='follows').string"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('div', class_='profile-avatar').find('img')['src']"
        }
      ],
      "method": "GET",
      "url": "https://www.picuki.com/profile/{username}",
      "valid": "response.status == 200 and 'Instagram profile with posts and stories' in responseContent"
    },
    {
      "app": "Pinterest",
      "id": 8,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('h1').string "
        },
        {
          "key": "Bio",
          "type": "generic-data",
          "value": "soup.find('meta', property='og:description')['content']"
        },
        {
          "key": "Followers",
          "type": "generic-data",
          "value": "soup.find('meta', property='pinterestapp:followers')['content']"
        },
        {
          "key": "Following",
          "type": "generic-data",
          "value": "soup.find('meta', property='pinterestapp:following')['content']"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('img')['src']"
        }
      ],
      "method": "GET",
      "url": "https://pinterest.com/{username}/",
      "valid": "response.status == 200 and ' - Profile | Pinterest' in responseContent"
    },
    {
      "app": "Snapchat",
      "id": 9,
      "metadata": [
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('image')['xlink:href']"
        }
      ],
      "method": "GET",
      "url": "https://feelinsonice.appspot.com/web/deeplink/snapcode?username={username}&size=400&type=SVG",
      "valid": "soup.find('defs') != None and '</clipPath>' in responseContent"
    },
    {
      "app": "Reddit",
      "id": 10,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "jsonData['data']['subreddit']['title']"
        },
        {
          "key": "Bio",
          "type": "generic-data",
          "value": "jsonData['data']['subreddit']['public_description']"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "jsonData['data']['snoovatar_img']"
        }
      ],
      "method": "GET",
      "url": "https://www.reddit.com/user/{username}/about.json",
      "valid": "response.status == 200 and 'total_karma' in responseContent"
    },
    {
      "app": "Soundcloud",
      "id": 11,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('header').find('p').string"
        },
        {
          "key": "location",
          "type": "location",
          "value": "soup.find('meta',property='og:locality')['content']+', '+soup.find('meta',property='og:country-name')['content']"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('meta',property='twitter:image')['content']"
        }
      ],
      "method": "GET",
      "url": "https://soundcloud.com/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Github",
      "id": 12,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('span',class_='p-name').text.strip('\\t\\r\\n')"
        },
        {
          "key": "Nickname",
          "type": "generic-data",
          "value": "soup.find('span',class_='p-nickname').text.strip('\\t\\r\\n')"
        },
        {
          "key": "Site",
          "type": "generic-data",
          "value": "soup.find('a',rel='nofollow me').text"
        },
        {
          "key": "location",
          "type": "location",
          "value": "soup.find('span',class_='p-label').text"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('meta',property='og:image')['content']"
        }
      ],
      "method": "GET",
      "url": "https://github.com/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Steam",
      "id": 13,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('div',class_='header_real_name').find('bdi').text"
        },
        {
          "key": "Nickname",
          "type": "generic-data",
          "value": "soup.find('span',class_='actual_persona_name').string"
        },
        {
          "key": "Bio",
          "type": "generic-data",
          "value": "soup.find('meta',property='og:description')['content']"
        },
        {
          "key": "location",
          "type": "location",
          "value": "soup.find('img',class_='profile_flag').next_sibling.strip('\\t\\r\\n')"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('link',rel='image_src')['href']"
        }
      ],
      "method": "GET",
      "url": "https://steamcommunity.com/id/{username}/",
      "valid": "'Error' not in soup.find('title').string and 'g_rgProfileData =' in responseContent"
    },
    {
      "app": "Linktree",
      "id": 14,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('h1').string"
        },
        {
          "key": "Description",
          "type": "generic-data",
          "value": "soup.find('meta',attrs={'name':'description'})['content']"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('meta',property='og:image')['content']"
        }
      ],
      "method": "GET",
      "url": "https://linktr.ee/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Xbox Gamertag",
      "id": 15,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('h1').string"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "'https:' + soup.find('img',class_='rounded img-thumbnail')['src']"
        }
      ],
      "method": "GET",
      "url": "https://www.xboxgamertag.com/search/{username}",
      "valid": "response.status == 200 and 'Games Played' in responseContent"
    },
    {
      "app": "Twitter Archived",
      "id": 16,
      "method": "GET",
      "url": "http://archive.org/wayback/available?url=https://twitter.com/{username}",
      "valid": "'available' in responseContent"
    },
    {
      "app": "Xvideos",
      "id": 17,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('div',id='profile-title').find('strong').text"
        },
        {
          "key": "Gender",
          "type": "generic-data",
          "value": "soup.find('p',id='pinfo-sex').find('span').text"
        },
        {
          "key": "Age",
          "type": "generic-data",
          "value": "soup.find('p',id='pinfo-age').find('span').text"
        },
        {
          "key": "Member since",
          "type": "generic-data",
          "value": "soup.find('p',id='pinfo-signedup').find('span').text"
        },
        {
          "key": "location",
          "type": "location",
          "value": "soup.find('p',id='pinfo-city').find('span').text+', '+soup.find('p',id='pinfo-country').find('span').text"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('img')['src']"
        }
      ],
      "method": "GET",
      "url": "https://www.xvideos.com/profiles/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "PornHub",
      "id": 18,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('div',class_='profileUserName').find('a').string"
        },
        {
          "key": "Gender",
          "type": "generic-data",
          "value": "soup.find('dl',class_='moreInformation').select_one('dd:nth-of-type(1)').string"
        },
        {
          "key": "Last login",
          "type": "generic-data",
          "value": "soup.find('dl',class_='moreInformation').select_one('dd:nth-of-type(2)').string"
        },
        {
          "key": "Relationship Status",
          "type": "generic-data",
          "value": "soup.find('dl',class_='moreInformation').select_one('dd:nth-of-type(3)').string"
        },
        {
          "key": "Interested In",
          "type": "generic-data",
          "value": "soup.find('dl',class_='moreInformation').select_one('dd:nth-of-type(4)').string"
        },
        {
          "key": "location",
          "type": "location",
          "value": "soup.find('dl',class_='moreInformation').select_one('dd:nth-of-type(5)').string+', '+soup.find('dl',class_='moreInformation').select_one('dd:nth-of-type(6)').string"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('img',id='getAvatar')['src']"
        }
      ],
      "method": "GET",
      "url": "https://www.pornhub.com/users/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Xhamster",
      "id": 19,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('div',class_='user-name').text.strip('\\t\\r\\n')"
        },
        {
          "key": "Gender",
          "type": "generic-data",
          "value": "soup.find('div',class_='i-am').find(class_='value').text"
        },
        {
          "key": "Last login",
          "type": "generic-data",
          "value": "soup.find('div',class_='offline').text"
        },
        {
          "key": "location",
          "type": "location",
          "value": "soup.find('div',class_='from').find(class_='value').text"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('img',class_='xh-avatar')['src']"
        }
      ],
      "method": "GET",
      "url": "https://xhamster.com/users/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Periscope",
      "id": 20,
      "method": "GET",
      "url": "https://www.periscope.tv/{username}",
      "valid": "response.status == 200 and '<label>Followers' in responseContent"
    },
    {
      "app": "AskFM",
      "id": 21,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('h1').text"
        },
        {
          "key": "Bio",
          "type": "generic-data",
          "value": "soup.find('div',class_='icon-bio').text"
        },
        {
          "key": "location",
          "type": "location",
          "value": "soup.find('div',class_='icon-location').text"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('img',class_='userAvatar')['src']"
        }
      ],
      "method": "GET",
      "url": "https://ask.fm/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Vimeo",
      "id": 22,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('meta', property='og:title')['content']"
        },
        {
          "key": "Bio",
          "type": "generic-data",
          "value": "soup.find('meta', property='og:description')['content']"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('meta', property='og:image')['content']"
        }
      ],
      "method": "GET",
      "url": "https://vimeo.com/{username}",
      "valid": "response.status == 200 and soup.find('title').text != 'VimeOhOh' and 'is a member of Vimeo, the' in responseContent"
    },
    {
      "app": "Pastebin",
      "id": 23,
      "metadata": [
        {
          "key": "Member since",
          "type": "generic-data",
          "value": "soup.find('span',class_='date-text')['title']"
        },
        {
          "key": "location",
          "type": "location",
          "value": "soup.find('span',class_='location').text"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "'https://pastebin.com'+soup.find('div',class_='user-icon').find('img')['src']"
        }
      ],
      "method": "GET",
      "url": "https://pastebin.com/u/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "WordPress Profile",
      "id": 24,
      "method": "GET",
      "url": "https://profiles.wordpress.org/{username}/",
      "valid": "response.status == 200"
    },
    {
      "app": "WordPress Site",
      "id": 25,
      "method": "GET",
      "url": "https://{username}.wordpress.com/",
      "valid": "'Do you want to register' not in responseContent and 'cannot be registered' not in responseContent"
    },
    {
      "app": "AllMyLinks",
      "id": 26,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('span',class_='profile-username').text.strip('\\t\\r\\n')"
        },
        {
          "key": "Bio",
          "type": "generic-data",
          "value": "soup.find('p',class_='profile-bio').text.strip('\\t\\r\\n')"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('meta',property='og:image')['content']"
        }
      ],
      "method": "GET",
      "url": "https://allmylinks.com/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Buzzfeed",
      "id": 27,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('meta', attrs={'name':'og:title'})['content']"
        },
        {
          "key": "Member since",
          "type": "generic-data",
          "value": "soup.find('dd').text"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "'https://img.buzzfeed.com/buzzfeed-static'+soup.find('meta',attrs={'name':'og:image'})['content']"
        }
      ],
      "method": "GET",
      "url": "https://www.buzzfeed.com/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "JsFiddle",
      "id": 28,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('div',class_='profileDetails').find('a').text.strip('\\t\\r\\n')"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('div',class_='avatar').find('img')['src']"
        }
      ],
      "method": "GET",
      "url": "https://jsfiddle.net/user/{username}/",
      "valid": "response.status == 200"
    },
    {
      "app": "Sourceforge",
      "id": 29,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('h1').text.strip('\\t\\r\\n')"
        },
        {
          "key": "Member since",
          "type": "generic-data",
          "value": "soup.find('dl',class_='personal-data').select_one('dd:nth-of-type(2)').string.strip('\\t\\r\\n')"
        },
        {
          "key": "Gender",
          "type": "generic-data",
          "value": "soup.find('dl',class_='personal-data').select_one('dd:nth-of-type(4)').string.strip('\\t\\r\\n')"
        },
        {
          "key": "location",
          "type": "location",
          "value": "soup.find('dl',class_='personal-data').select_one('dd:nth-of-type(3)').string.strip('\\t\\r\\n')"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('img',class_='project_icon')['src']"
        }
      ],
      "method": "GET",
      "url": "https://sourceforge.net/u/{username}/profile",
      "valid": "response.status == 200"
    },
    {
      "app": "Kickstarter",
      "id": 30,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('h2').text.strip('\\n')"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "html.unescape(soup.find('div',id='profile_avatar').find('img')['src'])"
        }
      ],
      "method": "GET",
      "url": "https://www.kickstarter.com/profile/{username}",
      "valid": "response.status == 200 and 'projects' in responseContent"
    },
    {
      "app": "Smule",
      "id": 31,
      "method": "GET",
      "url": "https://www.smule.com/{username}",
      "valid": "'404' not in soup.find('title').string"
    },
    {
      "app": "Blogspot",
      "id": 32,
      "method": "GET",
      "url": "https://{username}.blogspot.com/",
      "valid": "response.status == 200 and 'Blogger Template Style' in responseContent"
    },
    {
      "app": "Tradingview",
      "id": 33,
      "method": "GET",
      "url": "https://www.tradingview.com/u/{username}/",
      "valid": "response.status == 200"
    },
    {
      "app": "Internet Archive",
      "id": 34,
      "method": "GET",
      "url": "https://archive.org/details/@{username}",
      "valid": "'cannot find account' not in soup.find('title').string"
    },
    {
      "app": "Alura",
      "id": 35,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('h2').string"
        },
        {
          "key": "Bio",
          "type": "generic-data",
          "value": "soup.find('p',class_='profile-header-bio').string.strip('\\t\\r\\n')"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('img',class_='profile-header-avatar')['src']"
        }
      ],
      "method": "GET",
      "url": "https://cursos.alura.com.br/user/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Behance",
      "id": 36,
      "method": "GET",
      "url": "https://www.behance.net/{username}/",
      "valid": "response.status == 200 and '<title>Behance</title>' in responseContent"
    },
    {
      "app": "MySpace",
      "id": 37,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('h1').text.strip('\\t\\r\\n')"
        },
        {
          "key": "Bio",
          "type": "generic-data",
          "value": "soup.find('div',id='aboutMe').text.strip('\\t\\r\\n')"
        },
        {
          "key": "Site",
          "type": "generic-data",
          "value": "soup.find('div',class_='website').string.strip('\\t\\r\\n')"
        },
        {
          "key": "location",
          "type": "location",
          "value": "soup.find('div',class_='location').string.strip('\\t\\r\\n')"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('a',id='profileImage').find('img')['src']"
        }
      ],
      "method": "GET",
      "url": "https://myspace.com/{username}",
      "valid": "response.status == 200 and '<!-- Profile -->' in responseContent"
    },
    {
      "app": "Disqus",
      "id": 38,
      "method": "GET",
      "url": "https://disqus.com/by/{username}/",
      "valid": "response.status == 200 and '<title>Disqus Profile' in responseContent"
    },
    {
      "app": "Slideshare",
      "id": 39,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('h1').text.strip('\\t\\r\\n')"
        },
        {
          "key": "Bio",
          "type": "generic-data",
          "value": "soup.find('span',class_='description').text"
        },
        {
          "key": "location",
          "type": "location",
          "value": "soup.find('span',class_='city').text+', '+soup.find('span',class_='country-name').text"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('img',class_='user-photo')['src']"
        }
      ],
      "method": "GET",
      "url": "https://www.slideshare.net/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Rumble",
      "id": 40,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('h1').text"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('img')['src']"
        }
      ],
      "method": "GET",
      "url": "https://rumble.com/user/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Ebay",
      "id": 41,
      "method": "GET",
      "url": "https://www.ebay.com/usr/{username}",
      "valid": "'error' not in soup.find('title').string and response.status == 200"
    },
    {
      "app": "RedBubble",
      "id": 42,
      "method": "GET",
      "url": "https://www.redbubble.com/people/{username}/shop?asc=u",
      "valid": "response.status == 200"
    },
    {
      "app": "Kik",
      "id": 43,
      "method": "GET",
      "url": "https://ws2.kik.com/user/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Roblox",
      "id": 44,
      "method": "GET",
      "url": "https://auth.roblox.com/v1/usernames/validate?username={username}&birthday=2019-12-31T23:00:00.000Z",
      "valid": "'Username is already in use' in jsonData['message']"
    },
    {
      "app": "Armor Games",
      "id": 45,
      "method": "GET",
      "url": "https://armorgames.com/user/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Fortnite Tracker",
      "id": 46,
      "method": "GET",
      "url": "https://fortnitetracker.com/profile/all/{username}",
      "valid": "response.status == 200 and 's Fortnite Stats - Fortnite Tracker' in responseContent"
    },
    {
      "app": "Duolingo",
      "id": 47,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "json['users'][0]['name']"
        }
      ],
      "method": "GET",
      "url": "https://www.duolingo.com/2017-06-30/users?username={username}&_=1628308619574",
      "valid": "len(jsonData['users']) > 0"
    },
    {
      "app": "Chess",
      "id": 48,
      "method": "GET",
      "url": "https://www.chess.com/member/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Shopify",
      "id": 49,
      "method": "GET",
      "url": "https://{username}.myshopify.com/",
      "valid": "response.status == 200"
    },
    {
      "app": "Untappd",
      "id": 50,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('h1').text"
        },
        {
          "key": "location",
          "type": "location",
          "value": "soup.find('p',class_='location').text"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('div',class='avatar-holder').find('img')['src']"
        }
      ],
      "method": "GET",
      "url": "https://untappd.com/user/{username}/",
      "valid": "response.status == 200"
    },
    {
      "app": "Last FM",
      "id": 51,
      "method": "GET",
      "url": "https://www.last.fm/user/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Cash APP",
      "id": 52,
      "method": "GET",
      "url": "https://cash.app/${username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Imgur",
      "id": 53,
      "method": "GET",
      "url": "https://api.imgur.com/account/v1/accounts/{username}?client_id=546c25a59c58ad7&include=trophies%2Cmedallions",
      "valid": "response.status == 200"
    },
    {
      "app": "Trello",
      "id": 54,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "jsonData['fullName']"
        }
      ],
      "method": "GET",
      "url": "https://trello.com/1/Members/{username}?fields=activityBlocked%2CavatarUrl%2Cbio%2CbioData%2Cconfirmed%2CfullName%2CidEnterprise%2CidMemberReferrer%2Cinitials%2CmemberType%2CnonPublic%2Cproducts%2Curl%2Cusername",
      "valid": "response.status == 200 and 'avatarUrl' in responseContent"
    },
    {
      "app": "Minecraft",
      "id": 55,
      "metadata": [
        {
          "key": "picture",
          "type": "image",
          "value": "jsonData['data']['player']['avatar']"
        }
      ],
      "method": "GET",
      "url": "https://playerdb.co/api/player/minecraft/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Patreon",
      "id": 56,
      "method": "GET",
      "url": "https://www.patreon.com/{username}",
      "valid": "response.status == 200 and 'Become a patron of' in responseContent"
    },
    {
      "app": "DockerHub",
      "id": 57,
      "method": "GET",
      "url": "https://hub.docker.com/v2/users/{username}/",
      "valid": "response.status == 200 and 'username' in responseContent"
    },
    {
      "app": "Kongregate",
      "id": 58,
      "method": "GET",
      "url": "https://www.kongregate.com/accounts/{username}",
      "valid": "response.status == 200 and 'Member Since' in responseContent"
    },
    {
      "app": "Vine",
      "id": 59,
      "method": "GET",
      "url": "https://vine.co/api/users/profiles/vanity/{username}",
      "valid": "response.status == 200 and 'userId' in responseContent"
    },
    {
      "app": "Gamespot",
      "id": 60,
      "method": "GET",
      "url": "https://www.gamespot.com/profile/{username}/",
      "valid": "response.status == 200 and 's Profile - GameSpot</title>' in responseContent"
    },
    {
      "app": "Shutterstock",
      "id": 61,
      "method": "GET",
      "url": "https://www.shutterstock.com/pt/g/{username}/about",
      "valid": "response.status == 200"
    },
    {
      "app": "Chaturbate",
      "id": 62,
      "method": "GET",
      "url": "https://chaturbate.com/{username}/",
      "valid": "response.status == 200"
    },
    {
      "app": "ProtonMail",
      "headers": "{'X-Pm-Appversion': 'web-account@4.28.2','X-Pm-Appversion': 'web-account@4.28.2'}",
      "id": 63,
      "method": "GET",
      "url": "https://account.protonmail.com/api/users/available?Name={username}",
      "valid": "response.status == 409"
    },
    {
      "app": "TripAdvisor",
      "id": 64,
      "method": "GET",
      "url": "https://www.tripadvisor.com/Profile/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "RapidAPI",
      "id": 65,
      "method": "GET",
      "url": "https://rapidapi.com/user/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "HackTheBox",
      "id": 66,
      "json": "{{\"type\": \"username\",\"input\": \"{username}\"}}",
      "method": "POST",
      "url": "https://www.hackthebox.com/api/v4/register/check",
      "valid": "jsonData['message']['found'] == True"
    },
    {
      "app": "Wikipedia",
      "id": 67,
      "method": "GET",
      "url": "https://en.wikipedia.org/w/api.php?action=query&format=json&list=users&ususers={username}&usprop=cancreate&formatversion=2&errorformat=html&errorsuselocal=true&uselang=en",
      "valid": "response.status == 200 and 'userid' in responseContent"
    },
    {
      "app": "Buymeacoffe",
      "id": 68,
      "method": "GET",
      "url": "https://www.buymeacoffee.com/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Arduino",
      "id": 69,
      "method": "GET",
      "url": "https://create.arduino.cc/projecthub/{username}",
      "valid": "response.status == 200 and '- Arduino Project Hub' in responseContent"
    },
    {
      "app": "League of Legends Tracker",
      "id": 70,
      "method": "GET",
      "url": "https://tracker.gg/lol/profile/riot/NA/{username}/overview",
      "valid": "response.status == 200"
    },
    {
      "app": "Lego Ideas",
      "id": 71,
      "method": "GET",
      "url": "https://ideas.lego.com/profile/{username}/entries?query=&sort=top",
      "valid": "response.status == 200"
    },
    {
      "app": "Fiverr",
      "id": 72,
      "method": "GET",
      "url": "https://www.fiverr.com/{username}",
      "valid": "response.status == 200 and 'member-since' in responseContent"
    },
    {
      "app": "Redtube",
      "id": 73,
      "method": "GET",
      "url": "https://www.redtube.com.br/users/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Dribble",
      "id": 74,
      "method": "GET",
      "url": "https://dribbble.com/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Packet Storm Security",
      "id": 75,
      "method": "GET",
      "url": "https://packetstormsecurity.com/users/{username}",
      "valid": "response.status == 200 and 'User Profile for' in responseContent"
    },
    {
      "app": "Ello",
      "id": 76,
      "method": "GET",
      "url": "https://ello.co/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Medium",
      "id": 77,
      "method": "GET",
      "url": "https://{username}.medium.com/about",
      "valid": "response.status == 200 and 'Medium member since' in responseContent"
    },
    {
      "app": "Hackaday",
      "id": 78,
      "method": "GET",
      "url": "https://hackaday.io/{username}",
      "valid": "response.status == 200 and 's Profile | Hackaday.io' in responseContent"
    },
    {
      "app": "Keybase",
      "id": 79,
      "method": "GET",
      "url": "https://keybase.io/{username}",
      "valid": "response.status == 200 and 'username' in responseContent"
    },
    {
      "app": "HackerOne",
      "id": 80,
      "method": "GET",
      "url": "https://hackerone.com/{username}?type=user",
      "valid": "response.status == 200 and 'profile that highlights' in responseContent"
    },
    {
      "app": "BugCrowd",
      "id": 81,
      "method": "GET",
      "url": "https://bugcrowd.com/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "OneCompiler",
      "id": 82,
      "method": "GET",
      "url": "https://onecompiler.com/api/users/{username}",
      "valid": "response.status == 200 and 'name' in responseContent"
    },
    {
      "app": "TryHackMe",
      "id": 83,
      "method": "GET",
      "url": "https://tryhackme.com/p/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Lyrics Training",
      "id": 84,
      "method": "GET",
      "url": "https://lyricstraining.com/search?user={username}",
      "valid": "response.status == 200 and 'Sorry, there are no results for your search.' not in responseContent"
    },
    {
      "app": "Expo",
      "id": 85,
      "method": "GET",
      "url": "https://forums.expo.dev/u/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "RAWG",
      "id": 86,
      "method": "GET",
      "url": "https://rawg.io/@{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Coroflot",
      "id": 87,
      "method": "GET",
      "url": "https://www.coroflot.com/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Cloudflare",
      "id": 88,
      "method": "GET",
      "url": "https://community.cloudflare.com/u/{username}",
      "valid": "response.status == 200 and '- Cloudflare Community' in responseContent"
    },
    {
      "app": "Wattpad",
      "id": 89,
      "method": "GET",
      "url": "https://www.wattpad.com/user/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Mixlr",
      "id": 90,
      "method": "GET",
      "url": "http://api.mixlr.com/users/{username}",
      "valid": "response.status == 200 and 'username' in responseContent"
    },
    {
      "app": "ImageShack",
      "id": 91,
      "method": "GET",
      "url": "https://imageshack.com/user/{username}",
      "valid": "response.status == 200 and 's Images</title>' in responseContent"
    },
    {
      "app": "Freelancer",
      "id": 92,
      "method": "GET",
      "url": "https://www.freelancer.com/u/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Dev To",
      "id": 93,
      "method": "GET",
      "url": "https://dev.to/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "BitBucket",
      "id": 94,
      "method": "GET",
      "url": "https://bitbucket.org/{username}/",
      "valid": "response.status == 200"
    },
    {
      "app": "Ko Fi",
      "id": 95,
      "method": "GET",
      "url": "https://ko-fi.com/{username}",
      "valid": "response.status == 200 and 'Become a supporter of' in responseContent"
    },
    {
      "app": "Flickr",
      "id": 96,
      "method": "GET",
      "url": "https://www.flickr.com/photos/{username}/",
      "valid": "response.status == 200 and '| Flickr' in responseContent"
    },
    {
      "app": "HackerEarth",
      "id": 97,
      "method": "GET",
      "url": "https://www.hackerearth.com/@{username}",
      "valid": "response.status == 200 and '404 | HackerEarth' not in responseContent"
    },
    {
      "app": "Spotify",
      "id": 98,
      "method": "GET",
      "url": "https://open.spotify.com/user/{username}",
      "valid": "response.status == 200 and 'on Spotify</title>' in responseContent"
    },
    {
      "app": "Snapchat Stories",
      "id": 99,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('h4').string"
        }
      ],
      "method": "GET",
      "url": "https://story.snapchat.com/s/{username}",
      "valid": "response.status == 200 and 'is on Snapchat!' in responseContent"
    },
    {
      "app": "Audio Jungle",
      "id": 100,
      "method": "GET",
      "url": "https://audiojungle.net/user/{username}",
      "valid": "response.status == 200 and 's profile on AudioJungle' in responseContent"
    },
    {
      "app": "Avid Community",
      "id": 101,
      "method": "GET",
      "url": "https://community.avid.com/members/{username}/default.aspx",
      "valid": "response.status == 200 and 'My Activity' in responseContent"
    },
    {
      "app": "Bandlab",
      "id": 102,
      "method": "GET",
      "url": "https://www.bandlab.com/api/v1.3/users/{username}",
      "valid": "response.status == 200 and 'about' in responseContent"
    },
    {
      "app": "Carrd",
      "id": 103,
      "method": "GET",
      "url": "https://{username}.carrd.co/",
      "valid": "response.status == 200"
    },
    {
      "app": "CastingCallClub",
      "id": 104,
      "method": "GET",
      "url": "https://www.castingcall.club/{username}",
      "valid": "response.status == 200 and '| Casting Call Club' in responseContent"
    },
    {
      "app": "Coderwall",
      "id": 105,
      "method": "GET",
      "url": "https://coderwall.com/{username}/",
      "valid": "response.status == 200 and 's profile |' in responseContent"
    },
    {
      "app": "Codewars",
      "id": 106,
      "method": "GET",
      "url": "https://www.codewars.com/users/{username}",
      "valid": "response.status == 200 and '| Codewars' in responseContent"
    },
    {
      "app": "F3",
      "id": 107,
      "method": "GET",
      "url": "https://f3.cool/{username}",
      "valid": "response.status == 200 and '<title>@' in responseContent"
    },
    {
      "app": "Gab",
      "id": 108,
      "method": "GET",
      "url": "https://gab.com/api/v1/account_by_username/{username}",
      "valid": "response.status == 200 and 'followers_count' in responseContent"
    },
    {
      "app": "Issuu",
      "id": 109,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('h1').text"
        },
        {
          "key": "location",
          "type": "location",
          "value": "soup.find('h2').text"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "'https:'+soup.find('img')['src']"
        }
      ],
      "method": "GET",
      "url": "https://issuu.com/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Steemit",
      "id": 110,
      "method": "GET",
      "url": "https://steemit.com/@{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Venmo",
      "id": 111,
      "method": "GET",
      "url": "https://account.venmo.com/u/{username}",
      "valid": "response.status == 200 and '\"profileInfo_username__' in responseContent"
    },
    {
      "app": "MODDB",
      "id": 112,
      "method": "GET",
      "url": "https://www.moddb.com/members/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "COLOURlovers",
      "id": 113,
      "method": "GET",
      "url": "https://www.colourlovers.com/lover/{username}",
      "valid": "response.status == 200 and 'since' in responseContent"
    },
    {
      "app": "Scheme Color",
      "id": 114,
      "method": "GET",
      "url": "https://www.schemecolor.com/author/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Roblox Trade",
      "id": 115,
      "method": "GET",
      "url": "https://rblx.trade/p/{username}",
      "valid": "response.status == 200 and 'Currently Wearing' in responseContent"
    },
    {
      "app": "Aetherhub",
      "id": 116,
      "metadata": [
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('img', class_='ae-profile-image-card')['src']"
        }
      ],
      "method": "GET",
      "url": "https://aetherhub.com/User/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "BugBounty",
      "id": 117,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('h1').text"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('img', class_='avatar user-319-avatar avatar-450 photo')['src']"
        }
      ],
      "method": "GET",
      "url": "https://bugbounty.gg/members/{username}/",
      "valid": "response.status == 200"
    }
    
  ]
}
